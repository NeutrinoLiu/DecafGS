# default config
data:
  format: "volumetric_video"
  data_dir: "scenes/cook_spinach"
  frame_total: 300
  resolution: 2
  loader: "torch" # "plain" if your GPU memory is large enough to load all frames
                  # else use "torch" to load frames on the fly
  max_cached_img: 1000 # max number of images in GPU when use plain loader
  # torch based data loader
  num_workers: 4
  min_iter_per_loader: 100
  # point cloud init
  init_type: "sfm"
  init_points: "init.ply"
  init_random_num: 10000
  init_random_extend: 3

model:
  resfield: False
  # anchor embedding
  anchor_num: 40000
  anchor_embed_dim: 64    # trainable embedding
  anchor_feature_dim: 64  # intermidiate feature
  anchor_child_num: 10
  # frame embedding
  frame_start: 0
  frame_end: 300
  frame_embed_dim: 200    # trainable embedding
  frame_embed_entangle_range: 0 # per frame embed is weighted avg of nearby frames 
  # decoupled delta embedding
  deform_delta_decoupled: False
  anchor_delta_embed_dim: 32     # dxyz use different embedding with feature
  frame_delta_embed_dim: 32
  # accumulative embedding
  embed_accumulative: False # accumulate frame embedding
  # deform MLP
  deform_hidden_dim: 64
  deform_depth: 8
  deform_skip: 4
  deform_anchor_xyz: True
  deform_child_offsets: True # deform child offsets as well
  deform_child_scales: False
  anchor_per_frame_dxyz: False
  # neural GS MLP
  spawn_hidden_dim: 64
  spawn_mlp_deeper: False
  spawn_xyz_bypass: False
  filter_by_ops: True
  view_dependent: False
  six_dof_rotate: False

train:
  # logging
  random_seed: 103
  root: "output/cook_spinach"
  # training
  max_step: 30000
  batch_size: 4
  # [anchor] learning rate
  lr_frame_embed: 0.01
  lr_mlp_deform: 
    - 1e-3
    - 1e-5
    - 0
    - 20000
  lr_anchor_embed: 0.01
  lr_anchor_xyz: 
    - 1e-3
    - 1e-5
    - 0
    - 20000
  lr_anchor_frame_dxyz:
    - 1e-4
    - 1e-6
    - 0
    - 20000
  lr_anchor_offsets: 
    - 2e-4
    - 2e-6
    - 0
    - 20000
  lr_anchor_offset_extend: 7e-3
  lr_anchor_scale_extend: 7e-3
  lr_anchor_opacity_decay: 1e-2
  # [neural GS] learning rate
  lr_mlp_resfield: 8e-4
  lr_mlp_scales: 0.004
  lr_mlp_quats: 0.004
  lr_mlp_opacities:
    - 2e-3
    - 2e-5
  lr_mlp_colors: 
    - 8e-3
    - 5e-5
  # loss and regularization
  ssim_lambda: 0.2
  reg_opacity: 1e-3
  reg_scale: 0
  reg_volume: 1e-1
  reg_offset: 1e-2
  # routine
  routine_first_frame_iters: 1000
  routine_per_frame_iters: 500
  routine_per_frame_means_iters: 200
  # densification with MCMC relocation
  perturb_all: False
  perturb_start_iter: 1000
  perturb_intensity: 0
  blur_gradual_opt: False
  blur_gradual_opt_steps: 5000
  grow_rate: 0.05
  grow_start_iter: 500
  grow_every: 100
  reloc_start_iter: 500
  reloc_stop_iter: 1000000
  reloc_every: 100
  reloc_dead_thres: 0.01
  reloc_scale_decay: 0.9 # an approximate of MCMC rescale after relocation
  grad2d_alpha: .0
  blame_alpha: .0
  blame_start_iter: 2000
  blame_max_gs_per_tile: 1000
  # evaluation
  tb_histogram: False
  tb_per_frame_psnr: False
  save_eval_img: False
  save_eval_img_every: 1000
  save_model_onnx: False
  test_every: 25
  test_steps_every: 500
  test_steps:
    - 1000
    - 2500
    - 5000
    - 7500
    - 10000
    - 12500
    - 15000
    - 17500
    - 20000
    - 22500
    - 25000
    - 27500
    - 30000
    - 35000
    - 40000
    - 45000
    - 50000